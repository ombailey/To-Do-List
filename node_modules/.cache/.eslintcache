[{"/Users/omarbailey/Documents/Coding/React/random/src/index.js":"1","/Users/omarbailey/Documents/Coding/React/random/src/App.js":"2","/Users/omarbailey/Documents/Coding/React/random/src/reportWebVitals.js":"3","/Users/omarbailey/Documents/GitHub/To-Do-List/src/index.js":"4","/Users/omarbailey/Documents/GitHub/To-Do-List/src/App.js":"5","/Users/omarbailey/Documents/GitHub/To-Do-List/src/reportWebVitals.js":"6"},{"size":535,"mtime":1663630323327,"results":"7","hashOfConfig":"8"},{"size":4939,"mtime":1664075380504,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1663630323329,"results":"10","hashOfConfig":"8"},{"size":535,"mtime":1663630323327,"results":"11","hashOfConfig":"12"},{"size":4931,"mtime":1664115621299,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1663630323329,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"pia3r4",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tsf362",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/omarbailey/Documents/Coding/React/random/src/index.js",[],[],[],"/Users/omarbailey/Documents/Coding/React/random/src/App.js",["35","36","37","38","39","40","41","42"],[],"/Users/omarbailey/Documents/Coding/React/random/src/reportWebVitals.js",[],[],"/Users/omarbailey/Documents/GitHub/To-Do-List/src/index.js",[],[],"/Users/omarbailey/Documents/GitHub/To-Do-List/src/App.js",["43","44","45","46","47","48","49"],[],"import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faX } from \"@fortawesome/free-solid-svg-icons\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { faRotateLeft } from \"@fortawesome/free-solid-svg-icons\";\n\n// Display Entire Application\nfunction App() {\n  return (\n    <div id=\"main\">\n      <h1 className=\"main-title\"> To-Do List</h1>\n      <List />\n    </div>\n  );\n}\n\n// Functionality for toDo List\nfunction List() {\n  const [toDo, changeToDo] = useState([]);\n  const [completedList, changeCompletedList] = useState([]);\n\n  const completeTask = (event) => {\n    let task = event.target;\n    changeCompletedList([\n      ...toDo.filter((item) => item.id == task.previousElementSibling.id),\n      ...completedList,\n    ]);\n    changeToDo(\n      toDo.filter((item) => item.id != task.previousElementSibling.id)\n    );\n  };\n\n  const deleteTask = (event) => {\n    let task = event.target;\n    changeToDo(toDo.filter((item) => item.id != task.nextElementSibling.id));\n  };\n\n  return (\n    <div>\n      <Input toDo={toDo} changeToDo={changeToDo} />\n      <ul className=\"task-list\">\n        {toDo.map((item) => (\n          <div className=\"list-items\">\n            <FontAwesomeIcon\n              className=\"remove\"\n              icon={faX}\n              onClick={deleteTask}\n            />\n            <li id={item.id}>{item.name}</li>\n            <FontAwesomeIcon\n              className=\"check\"\n              icon={faCheck}\n              onClick={completeTask}\n            />\n          </div>\n        ))}\n      </ul>\n      <TaskLength toDo={toDo} />\n      <Completed\n        completedList={completedList}\n        toDo={toDo}\n        changeCompletedList={changeCompletedList}\n        changeToDo={changeToDo}\n      />\n    </div>\n  );\n}\n// Functionality for Adding Tasks\nfunction Input({ toDo, changeToDo }) {\n  const [taskText, setTaskText] = useState(\"\");\n\n  const changeText = (event) => {\n    setTaskText(event.target.value);\n  };\n\n  const addTask = () => {\n    let newTask = { name: taskText, id: uuidv4() };\n    changeToDo([newTask, ...toDo]);\n    clearInput();\n  };\n\n  const clearInput = () => {\n    let input = document.querySelector(\"#input\");\n    input.value = \"\";\n  };\n\n  // Allows user to use enter to add task as well as pressing add button.\n  useEffect(() => {\n    let inputField = document.querySelector(\"#input\");\n    inputField.addEventListener(\"keypress\", function (event) {\n      if (event.key === \"Enter\") {\n        addTask();\n      }\n    });\n  });\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        name=\"input\"\n        id=\"input\"\n        onChange={changeText}\n        placeholder=\"New Task...\"\n      />\n      <button className=\"add-task\" onClick={addTask} title=\"Add Task\">\n        Add\n      </button>\n    </div>\n  );\n}\n\n// Functionality for Task Count\nfunction TaskLength({ toDo }) {\n  return (\n    <div>\n      <h3 className=\"num-tasks\">\n        You have <span className=\"task-number\">{toDo.length}</span> tasks.\n      </h3>\n    </div>\n  );\n}\n\n// Functionality for Completed Bar\nfunction Completed({ completedList, toDo, changeToDo, changeCompletedList }) {\n  const [arrowDirection, changeArrowDirection] = useState(\"up\");\n\n  let arrow = faAngleUp;\n  if (arrowDirection == \"up\") {\n    arrow = faAngleUp;\n  } else {\n    arrow = faAngleDown;\n  }\n\n  const toggleList = () => {\n    let cList = document.querySelector(\".complete-list\");\n    if (arrowDirection == \"up\") {\n      changeArrowDirection(\"down\");\n      cList.style.display = \"initial\";\n    } else {\n      changeArrowDirection(\"up\");\n      cList.style.display = \"none\";\n    }\n  };\n\n  const undoTask = (event) => {\n    let task = event.target;\n    changeCompletedList(\n      completedList.filter((item) => item.id != task.previousElementSibling.id)\n    );\n    changeToDo([\n      ...completedList.filter(\n        (item) => item.id == task.previousElementSibling.id\n      ),\n      ...toDo,\n    ]);\n  };\n  return (\n    <div className=\"completed-bar\">\n      <div className=\"completed\">\n        <p>\n          Completed{\" \"}\n          <span className=\"completed-num\">( {completedList.length} )</span>\n        </p>\n        <FontAwesomeIcon\n          className=\"list-arrows\"\n          icon={arrow}\n          onClick={toggleList}\n          title=\"toggle list\"\n        />\n      </div>\n      <ul className=\"complete-list\">\n        {completedList.map((task) => (\n          <div className=\"complete-list-items\">\n            <li id={task.id}>{task.name}</li>\n            <FontAwesomeIcon\n              className=\"undo-task task-btn\"\n              icon={faRotateLeft}\n              onClick={undoTask}\n            />\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n}\nexport default App;\n","/Users/omarbailey/Documents/GitHub/To-Do-List/src/reportWebVitals.js",[],[],{"ruleId":"50","severity":1,"message":"51","line":2,"column":21,"nodeType":"52","messageId":"53","endLine":2,"endColumn":27},{"ruleId":"54","severity":1,"message":"55","line":29,"column":40,"nodeType":"56","messageId":"57","endLine":29,"endColumn":42},{"ruleId":"54","severity":1,"message":"58","line":33,"column":37,"nodeType":"56","messageId":"57","endLine":33,"endColumn":39},{"ruleId":"54","severity":1,"message":"58","line":39,"column":46,"nodeType":"56","messageId":"57","endLine":39,"endColumn":48},{"ruleId":"54","severity":1,"message":"55","line":133,"column":22,"nodeType":"56","messageId":"57","endLine":133,"endColumn":24},{"ruleId":"54","severity":1,"message":"55","line":141,"column":24,"nodeType":"56","messageId":"57","endLine":141,"endColumn":26},{"ruleId":"54","severity":1,"message":"58","line":153,"column":46,"nodeType":"56","messageId":"57","endLine":153,"endColumn":48},{"ruleId":"54","severity":1,"message":"55","line":157,"column":27,"nodeType":"56","messageId":"57","endLine":157,"endColumn":29},{"ruleId":"54","severity":1,"message":"55","line":29,"column":40,"nodeType":"56","messageId":"57","endLine":29,"endColumn":42},{"ruleId":"54","severity":1,"message":"58","line":33,"column":37,"nodeType":"56","messageId":"57","endLine":33,"endColumn":39},{"ruleId":"54","severity":1,"message":"58","line":39,"column":46,"nodeType":"56","messageId":"57","endLine":39,"endColumn":48},{"ruleId":"54","severity":1,"message":"55","line":133,"column":22,"nodeType":"56","messageId":"57","endLine":133,"endColumn":24},{"ruleId":"54","severity":1,"message":"55","line":141,"column":24,"nodeType":"56","messageId":"57","endLine":141,"endColumn":26},{"ruleId":"54","severity":1,"message":"58","line":153,"column":46,"nodeType":"56","messageId":"57","endLine":153,"endColumn":48},{"ruleId":"54","severity":1,"message":"55","line":157,"column":27,"nodeType":"56","messageId":"57","endLine":157,"endColumn":29},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='."]